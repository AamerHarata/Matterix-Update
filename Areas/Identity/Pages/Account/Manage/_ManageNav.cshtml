@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">{{$t('message.profile')}}</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ProfilePictureNavClass(ViewContext)" id="profile-picture" asp-page="./ProfilePicture">{{$t('message.profilePicture')}}</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">{{$t('message.password')}}</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PrivacyAndNotificationsNavClass(ViewContext)" id="privacy-and-notifications" asp-page="./PrivacyAndNotifications">{{$t('message.privacyAndNotifications')}}</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.AccountActivityNavClass(ViewContext)" id="account-activity" asp-page="./AccountActivity">{{$t('message.accountActivity')}}</a></li>
    
    
    
    @* @if (hasExternalLogins) *@
    @* { *@
        @* <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li> *@
    @* } *@
    @* <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li> *@
    @* <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li> *@
</ul>
