@using Matterix.Services
@model Matterix.Models.ViewModel.PaymentViewModel

@switch (Model.Reason)
{
    
    case EnumList.PaymentReason.Register:
        <p>
            {{$t('message.thisRegistrationExpiresAt')}}
            @if (DateTime.Now > Model.Course.StartDate)
            {
                <span>@Format.DateFormat(DateTime.Now.AddYears(1))</span>
            }
            else
            {
                <span>@Format.DateFormat(Model.Course.StartDate.AddYears(1))</span>
            }
        </p>    
    
        if (!Model.Course.Ended)
        {
            <p>{{$t('message.notAllowedContactTeacherOutLecture')}}</p>
            <p>{{$t('message.onceYouAreDoneYouGetInstruction')}}</p>
        }
        
        
        else
        {
            <p>{{$t('message.courseEndedNoQuestions')}}</p>
        }
        
        
        <p>{{$t('message.rightsOfFilesAndVideos')}}</p>
        
        <p>{{$t('message.thisProcessIsDoneBy')}}. {{$t('message.thisProcedureCauseExpenses')}}</p>
        <p id="user-device">
            <table class="w-50">
                <tr>
                    <td>{{$t('message.device')}}: </td><td id="device-type"></td>
                </tr>
                <tr>
                    <td>{{$t('message.operatingSystem')}}: </td><td id="operating-system"></td>
                </tr>
                <tr>
                    <td>{{$t('message.ipNumber')}}: </td><td id="ip-number"></td>
                </tr>
            </table>
        </p>
        
        break;
        
        
        
        
        
        
        
        
    case EnumList.PaymentReason.Invoice:
        
        break;
    case EnumList.PaymentReason.Donate:
    case EnumList.PaymentReason.Empty:
    case EnumList.PaymentReason.Other:
    default:
        throw new ArgumentOutOfRangeException();
}

