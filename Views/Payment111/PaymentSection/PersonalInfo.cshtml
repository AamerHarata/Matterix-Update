@using Matterix.Services
@model Matterix.Models.ViewModel.PaymentViewModel

@switch (Model.Reason)
{
    case EnumList.PaymentReason.Empty:
        break;
    case EnumList.PaymentReason.Register:
    case EnumList.PaymentReason.Invoice:
        <div class="text-center display-4 title-1-5">{{$t('message.personalInfo')}}</div>
        <br/>
        
        <div class="row">
            <div class="col-sm-3"></div>
            <div class="col-sm-6">
                <table class="table table-hover text-center direction w-100 m-auto">
                    <tr>
                        <th>{{$t('message.yourName')}}</th>
                        <td>@Model.Student.FirstName @Model.Student.LastName</td>
                    </tr>
                    <tr>
                        <th>{{$t('message.phoneNumber')}}</th>
                        <td>@Model.Student.PhoneNumber</td>
                    </tr>
                    <tr>
                        <th>{{$t('message.email')}}</th>
                        <td>@Model.Student.Email</td>
                    </tr>
                    <tr>
                        <th>{{$t('message.address')}}</th>
                        <td>@Model.Address.Street, @Model.Address.ZipCode @Model.Address.City</td>
                    </tr>
    
                    <tfoot>
    
                    <tr>
                        <th colspan="2">
                            <a class="m-button m-button-danger payment-next-section" current-section="personal-info" next-section="terms">{{$t('message.back')}}</a>
                            <a class="m-button m-button-success payment-next-section" current-section="personal-info" next-section="product-info">{{$t('message.next')}}</a>
                        </th>    
                    </tr>
            

                    </tfoot>
    
                </table>
            </div>
            <div class="col-sm-3"></div>
        </div>


        break;
    case EnumList.PaymentReason.Donate:
        break;
    case EnumList.PaymentReason.Other:
        break;
    default:
        throw new ArgumentOutOfRangeException();
}

