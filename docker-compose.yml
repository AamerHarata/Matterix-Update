version: '3'
services:
  nginx-proxy:
    image: "jwilder/nginx-proxy"
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "./my_custom_proxy_settings.conf:/etc/nginx/conf.d/my_custom_proxy_settings.conf"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt-nginx-proxy-companion:
    image: "jrcs/letsencrypt-nginx-proxy-companion"
    depends_on:
      - nginx-proxy
    volumes:
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro


  db:
    image: "postgres"
    ports:
      - 5432:5432
#    expose:
#      - 5432
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - db-data:/var/lib/postgresql/data
#      - ./db-data/:/var/lib/postgresql/data

#  redis:
#    image: 'bitnami/redis:latest'
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
#      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
#    container_name: haproxy_redis_auth_redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis-data:/bitnami/redis/data
        
  hangfiredb:
    image: "postgres"
    ports:
      - 3232:5432
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "hangfiredb"
    volumes:
      - hangfiredb:/var/lib/postgresql/hangfiredata      
 
  
  application:
    build: .
    depends_on:
      - db
#      - redis
    ports:
      - 8080:80
#    expose:
#      - "80"
    environment:
      VIRTUAL_HOST: "${HOST}"
      LETSENCRYPT_HOST: "${HOST}"
      LETSENCRYPT_EMAIL: "${EMAIL}"
    volumes:
      - application-data:/app/wwwroot/Files
        

volumes:
  nginx-certs:
  nginx-vhost:
  nginx-html:
  db-data:
  application-data:
  hangfiredb:
#  redis-data: